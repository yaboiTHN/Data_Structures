class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

def traverseAndPrint(head):
    currentNode = head
    while currentNode:
        print(currentNode.data, end=" -> ")
        currentNode = currentNode.next
    print("null")

def deleteByValue(head, valueToDelete):
    if head is None:
        print("List is empty.")
        return head

    # If the node to delete is the head
    if head.data == valueToDelete:
        return head.next

    currentNode = head
    while currentNode.next and currentNode.next.data != valueToDelete:
        currentNode = currentNode.next

    if currentNode.next is None:
        print(f"Value {valueToDelete} not found.")
        return head

    # Delete the node
    currentNode.next = currentNode.next.next
    return head

def insertAtEnd(head, value):
    newNode = Node(value)
    if head is None:
        return newNode
    currentNode = head
    while currentNode.next:
        currentNode = currentNode.next
    currentNode.next = newNode
    return head

# Main Program

head = None

while True:
    print("\n[1] Insert")
    print("[2] Delete")
    print("[3] Display")
    print("[4] Exit")
    choice = int(input("Enter choice: "))

    if choice == 1:
        val = int(input("Enter value to insert: "))
        head = insertAtEnd(head, val)
    elif choice == 2:
        val = int(input("Enter value to delete: "))
        head = deleteByValue(head, val)
    elif choice == 3:
        traverseAndPrint(head)
    elif choice == 4:
        break
    else:
        print("Invalid choice.")
